命令执行：
命令执行结果如果超出一定行数，先由小模型处理，再给大模型

代码搜索：
根据召回+重排的结果+整理最终片段，小模型读取片段及完整文件，判断哪些内容应当交给大模型，文件给出相对路径即可

搜索/看文档：
__

逻辑推理：
识别原子命题，以形式逻辑的形式整理为主析取/合取


工具：
回滚文件修改工具

提示词：
类型检查、单元测试优先于执行demo/集成测试/e2e测试

injection提示词：用于破限

多种工具调用格式及配套提示词

所有工作流都要给出demo，放在workflow_demo目录中

系统提示词：尽量在项目根目录执行命令，不要cd到别的目录
检查导入时只需要查看文件的头几行【延迟导入除外】

监控：监控启动的终端的pid，实时更新，通过slash命令关闭特定/所有pid，并提供一键关闭脚本

AGENT：scout
用qwen2.5-7b或Qwen/Qwen2.5-Coder-7B-Instruct或THUDM/glm-4-9b-chat【硅基】或GLM-4.5-Flash【Zai】模型根据重排结果、相应文件内容对文件与问题的联系进行分析，输出摘要，
然后把重排结果、摘要汇总给ds-r1-0528-8b，给出最后的摘要。

搜索：
给出多种匹配模式，并根据返回调整(如过滤文档、测试文件)

测试专家：
执行测试文件。如果是原文件的逻辑存在问题，则结束并给出总结，返回给主agent


会话增加fork功能，复制会话信息【只持久化，不必马上打开】


分析：每次更新todo list时都要输出针对该步骤的思考，为后续思考提供上下文


新增hook功能：
输入错误检查与修复：例如任务输成人物。【中文主要是同音，英语主要是拼写错误。只检查用户指令。需要过滤掉命令返回等信息】直接修改即可


代码审计：codeQL


输入信息(仅用户输入的语言表达部分，不关注'''块/json/xml等)语病检查


上下文压缩等价于fork


每次响应都要使用工具【除非是专门的分析节点】

文件操作：
记录修改过程，可以通过工具回退
如果修改引入了格式错误，则可以回退到上一次正确的版本

诊断工具：pylance、ts lsp【可以针对文件/目录】

重写文件不要搜索与替换。直接覆盖(override工具)

新增工具：领域知识查询。可以查询特定领域的知识及工具调用指南，作为特定任务下动态导入的上下文


无缝衔接human relay模式。
支持配置每个节点【主要是那些需要干净上下文或不需要完整上下文的】是否使用human relay模式。
例如context7 mcp搜索节点可以设置为human relay模式

增加重构模式。提示词中要求ai始终采用更根本的方式解决问题，不要放任架构问题不管